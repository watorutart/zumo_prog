#include <kernel.h>
#include "kernel_cfg.h"
#include "app.h"

#include "mbed.h"

#include "app_config.h"

#include "Zumo.h"
#include "Milkcocoa.h"

extern void onpush(MQTT::MessageData& md);
Serial pc(USBTX, USBRX);
Zumo zumo;

static int speed = 80;
static int steer = 0;
static int buf_size = 10;
DigitalOut ledR(LED1);

void onpush(MQTT::MessageData& md)
{
	pc.printf("onpush\n\r");
    MQTT::Message &message = md.message;
    DataElement de = DataElement((char*)message.payload);
	int v = de.getInt("z");
}

void task_main(intptr_t exinf) {
	pc.baud(115200);
	short i;
	int x,y,z;
	short xFilter[buf_size], yFilter[buf_size],zFilter[buf_size];
	short cnt=0;
	int x_offset,y_offset,z_offset;

	for (i=0;i<buf_size;i++){
		xFilter[i]=0;
		yFilter[i]=0;
		zFilter[i]=0;
	}

	dly_tsk(100);
	pc.printf("Setting offset...\r\n");

	x_offset=y_offset=z_offset=0;
	for (i=0;i<buf_size*20;i++){
		zumo.getAcceleration(&xFilter[0], &yFilter[0], &zFilter[0]);
		x_offset+=xFilter[0];
		y_offset+=yFilter[0];
		z_offset+=zFilter[0];
		dly_tsk(50);
	}
	x_offset/=(buf_size*20);
	y_offset/=(buf_size*20);
	z_offset/=(buf_size*20);

	pc.printf("offset:\t%d,\t%d,\t%d\r\n", x_offset, y_offset, z_offset);
	dly_tsk(2000);

	while(1){
		zumo.getAcceleration(&xFilter[cnt], &yFilter[cnt], &zFilter[cnt]);
		pc.printf("raw:\t%d,\t%d,\t%d, \t", xFilter[cnt]-x_offset, yFilter[cnt]-y_offset, zFilter[cnt]-z_offset);
		cnt++;
		cnt=cnt%buf_size;
		x=y=z=0;
		for (i=0;i<buf_size;i++){
			x+=xFilter[i];
			y+=yFilter[i];
			z+=zFilter[i];
		}
		x/=buf_size;
		y/=buf_size;
		z/=buf_size;
		x-=x_offset;
		y-=y_offset;
		z-=z_offset;

		pc.printf("filter:\t%d,\t%d,\t%d\r\n", x, y, z);
		dly_tsk(50);
    }

}
